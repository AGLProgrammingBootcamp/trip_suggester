<div id="lon_lat" data-lon-lat-id="<%=@lon_lat%>" style="display:none">
</div>
<script type="text/javascript">
  function initialize() {
  var search_num=8;
  var lon_max=-90;
  var lng_max=-180;
  var lon_min=90;
  var lng_min=180;
  var lon_cen=38.2586;
  var lng_cen=137.6850;
  var lon_dis=0;
  var lng_dis=0;
  var zoom_num=4;

  var data = document.getElementById('lon_lat');
  var lon_lat =  data.getAttribute('data-lon-lat-id');
  // document.write(lon_lat);
  var array=new Array();

  lon_lat=lon_lat.substr(1);
  // lon_lat=lon_lat.substr(-1)

  for (var i=0;i<search_num;i++){
    if (i!=0 )lon_lat=lon_lat.substr(2);
    var start = lon_lat.indexOf( "[" );
    var end = lon_lat.indexOf( "]" );
    var result1 = lon_lat.substring(start+1,end );
    var result2 = result1.split(",");
    array.push(result2[0]);
    array.push(result2[1]);
    lon_lat=lon_lat.slice(end);

}


  var count=0;
  for (i=0;i<search_num;i++){
    // if(array[2*i]!=0) count++;
    count++;
  }

  

  // for(i=0;i<search_num;i++){
  //   if(array[2*i]!=0){
  //     lon_cen=lon_cen+parseFloat(array[2*i]);
  //     lng_cen=lon_cen+parseFloat([2*i+1]);
  //     if(lon_max<array[2*i])lon_max=array[2*i];
  //     if(lon_min>array[2*i])lon_min=array[2*i];
  //     if(lng_max<array[2*i+1])lng_max=array[2*i+1];
  //     if(lng_min>array[2*i+1])lng_min=array[2*i+1];
  //   }
  // }


//   lon_cen=lon_cen/count;
//   lng_cen=lng_cen/count;


// document.write(array,count,"lon_dis",lon_dis,"zoom_num",zoom_num,"lon_cen",lon_cen,"lng_cen",lng_cen,);

//     lon_dis=3600*30.82*(parseFloat(lon_max)-parseFloat(lon_min));

//     if (lon_dis<10000){
//       zoom_num=10;
//     }else if (lon_dis<20000&&lon_dis>=10000){
//       zoom_num=9;
//     }else if (lon_dis<50000&&lon_dis>=20000){
//       zoom_num=8;
//     }else if (lon_dis<100000&&lon_dis>=50000){
//       zoom_num=7;
//     }else if (lon_dis<200000&&lon_dis>=100000){
//       zoom_num=6;
//     }else{
//       zoom_num=11;
//     }

// document.write(count,"lon_dis",lon_dis,"zoom_num",zoom_num,"lon_cen",lon_cen,"lng_cen",lng_cen);
// document.write(array);



  var latlng = new google.maps.LatLng(lon_cen,lng_cen);
  var opts = {
    zoom: zoom_num,
    center: latlng,
    mapTypeId: google.maps.MapTypeId.ROADMAP
  };



  var map = new google.maps.Map(document.getElementById("map_canvas"), opts);

  for (i=0; i < count;i++){
    if(array[2*i]!=0){
      var m_latlng1 = new google.maps.LatLng(array[2*i],array[2*i+1]);
      var marker1 = new google.maps.Marker({
      position: m_latlng1,
      map: map
    });
    }
  }

   // document.write(array[0],array[1],array[2],array[3],"0000000000",count);

  // var m_latlng1 = new google.maps.LatLng(35.632605,139.88132);
  // var marker1 = new google.maps.Marker({
  //   position: m_latlng1,
  //   map: map
  // });

  // var m_latlng2 = new google.maps.LatLng(35.625663,139.884238);
  // var marker2 = new google.maps.Marker({
  //   position: m_latlng2,
  //   map: map
  // });
}
</script>

  <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <script type="text/javascript"
      src="http://maps.google.com/maps/api/js?sensor=false"></script>
      
  </head>
<body onload="initialize()">

<div class="wrapper2">
<h1>検索結果</h1>

    <p>ホテルの場所</p>

    <div id="map_canvas" style="width:500px; height:300px"></div>
</div>
  
  <div class="wrapper2">
  <h2>候補一覧 from hash テーブル</h2>
  <%  @suggestions.each {|sggs_hash| %>
   <% if @bgt < sggs_hash[:hotel_sample_fare].to_i + sggs_hash[:trans_fare].to_i %>
   <div class="hdn" id="hotel-box">
   <% else %>
   <div class="hotel-box wrapper_result">
   <% end %>
     <div class="hotel-image-box">
       <image class="hotel-image" src="<%= sggs_hash[:pict_url] %>" width="250" height="220"></image>
     </div>
     <div class="hotel-lists" >
       <span class="hotel-name"><%= sggs_hash[:hotel_name] %></span></br>
       <h3 class="hotel-address">住所：<%= sggs_hash[:address]%></h3>
       <h3 class="hotel-sample-fare" >参考価格:<%=sggs_hash[:hotel_sample_fare] %>円</h3>
       <h3 class="hotel-arrival" >最寄り駅:<%=sggs_hash[:sta_arrival]%> 移動費:往復<%=sggs_hash[:trans_fare]%>円</h3>
       <a class="hotel-detail-url" href="<%=sggs_hash[:detail_url] %>">詳細情報はこちら </a>
     </div>
   </div>
  <% } %>
</div>

  <div class="wrapper2 dev">
  <h2>[Dev]取得したhashテーブル</h2>
  <%=@suggestions%>
  
  <h2>[Dev]TODOs</h2>
  <h3>View + Controllerいじるもの</h3>
  <ul class=todo><span class="done">done:</span>ここから先，予算における交通費－宿泊費比率などを表示する詳細画面が欲しい．</ul>
  <ul class=todo><span class="done">done:</span>他の温泉地もランダムに検索クエリに入れたい</ul>
  <ul class=todo><span class="todo">TODO:</span>検索結果に温泉地属性も入れたい</ul>
  <h3>Viewのみ</h3>
  <ul class=todo><span class="done">done:</span>CSSでdiv要素を整列させたい</ul>
  <ul class=todo><span class="done">done:</span>かっこいい画像で見栄えを良くしたい</ul>
  <ul class=todo><span class="todo">TODO:</span>候補一覧の表示を綺麗なグリッドにしたい．</ul>
</div>
  
</body>
